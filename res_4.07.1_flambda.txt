$ make run > res_4.07.1_flambda.txt


ocamlfind opt -O3 -unbox-closures -unbox-closures-factor 20 -package sequence -package gen -package core_kernel -package base -package batteries -package benchmark -package containers -package oseq -linkpkg bench.ml -o bench.native
./bench.native

Throughputs for "gen", "gen_no_optim", "g", "g_exn", "core.sequence", "base.sequence", "cps", "cps2", "fold", "sequence", "list", "lazy_list", "ulist", "uncons", "coroutine", "batseq", "std_seq", "oseq" each running 2 times for at least 3 CPU seconds:
          gen:  3.59 WALL ( 3.59 usr +  0.00 sys =  3.59 CPU) @ 43.97/s (n=158)
                3.59 WALL ( 3.59 usr +  0.00 sys =  3.59 CPU) @ 44.00/s (n=158)
 gen_no_optim:  3.13 WALL ( 3.13 usr +  0.00 sys =  3.13 CPU) @ 38.94/s (n=122)
                3.13 WALL ( 3.13 usr +  0.00 sys =  3.13 CPU) @ 39.00/s (n=122)
            g:  3.17 WALL ( 3.17 usr +  0.00 sys =  3.17 CPU) @ 89.39/s (n=283)
                3.17 WALL ( 3.17 usr +  0.00 sys =  3.17 CPU) @ 89.29/s (n=283)
        g_exn:  3.13 WALL ( 3.13 usr +  0.00 sys =  3.13 CPU) @ 38.93/s (n=122)
                3.12 WALL ( 3.12 usr +  0.00 sys =  3.12 CPU) @ 39.12/s (n=122)
core.sequence:  3.12 WALL ( 3.12 usr +  0.00 sys =  3.12 CPU) @ 57.31/s (n=179)
                3.12 WALL ( 3.12 usr +  0.00 sys =  3.12 CPU) @ 57.33/s (n=179)
base.sequence:  3.17 WALL ( 3.17 usr +  0.00 sys =  3.17 CPU) @ 57.38/s (n=182)
                3.17 WALL ( 3.17 usr +  0.00 sys =  3.17 CPU) @ 57.45/s (n=182)
          cps:  3.59 WALL ( 3.59 usr +  0.00 sys =  3.59 CPU) @ 20.91/s (n=75)
                3.58 WALL ( 3.58 usr +  0.00 sys =  3.58 CPU) @ 20.93/s (n=75)
         cps2:  3.57 WALL ( 3.57 usr +  0.00 sys =  3.57 CPU) @ 20.99/s (n=75)
                3.58 WALL ( 3.58 usr +  0.00 sys =  3.58 CPU) @ 20.94/s (n=75)
         fold:  3.15 WALL ( 3.15 usr +  0.00 sys =  3.15 CPU) @ 155.39/s (n=490)
                3.15 WALL ( 3.15 usr +  0.00 sys =  3.15 CPU) @ 155.72/s (n=490)
     sequence:  3.12 WALL ( 3.12 usr +  0.00 sys =  3.12 CPU) @ 254.21/s (n=794)
                3.14 WALL ( 3.14 usr +  0.00 sys =  3.14 CPU) @ 252.91/s (n=794)
         list:  3.08 WALL ( 3.06 usr +  0.02 sys =  3.08 CPU) @  5.19/s (n=16)
                3.07 WALL ( 3.05 usr +  0.02 sys =  3.07 CPU) @  5.21/s (n=16)
    lazy_list:  3.11 WALL ( 3.11 usr +  0.00 sys =  3.11 CPU) @  5.79/s (n=18)
                3.12 WALL ( 3.12 usr +  0.00 sys =  3.12 CPU) @  5.77/s (n=18)
        ulist:  3.15 WALL ( 3.15 usr +  0.00 sys =  3.15 CPU) @ 52.34/s (n=165)
                3.16 WALL ( 3.16 usr +  0.00 sys =  3.16 CPU) @ 52.27/s (n=165)
       uncons:  3.11 WALL ( 3.11 usr +  0.00 sys =  3.11 CPU) @ 53.42/s (n=166)
                3.10 WALL ( 3.10 usr +  0.00 sys =  3.10 CPU) @ 53.57/s (n=166)
    coroutine:  3.23 WALL ( 3.23 usr +  0.00 sys =  3.23 CPU) @ 50.40/s (n=163)
                3.24 WALL ( 3.24 usr +  0.00 sys =  3.24 CPU) @ 50.25/s (n=163)
       batseq:  3.09 WALL ( 3.09 usr +  0.00 sys =  3.09 CPU) @ 39.78/s (n=123)
                3.09 WALL ( 3.09 usr +  0.00 sys =  3.09 CPU) @ 39.77/s (n=123)
      std_seq:  3.16 WALL ( 3.16 usr +  0.00 sys =  3.16 CPU) @ 47.72/s (n=151)
                3.17 WALL ( 3.17 usr +  0.00 sys =  3.17 CPU) @ 47.59/s (n=151)
         oseq:  3.24 WALL ( 3.24 usr +  0.00 sys =  3.24 CPU) @ 46.96/s (n=152)
                3.19 WALL ( 3.19 usr +  0.00 sys =  3.19 CPU) @ 47.64/s (n=152)
		
                Rate        list lazy_list   cps  cps2 gen_no_optim g_exn batseq  gen oseq std_seq coroutine ulist uncons core.sequence base.sequence    g fold sequence
         list 5.20+-0.01/s    --      -10%  -75%  -75%         -87%  -87%   -87% -88% -89%    -89%      -90%  -90%   -90%          -91%          -91% -94% -97%     -98%
    lazy_list 5.78+-0.01/s   11%        --  -72%  -72%         -85%  -85%   -85% -87% -88%    -88%      -89%  -89%   -89%          -90%          -90% -94% -96%     -98%
          cps 20.9+- 0.0/s  302%      262%    -- [-0%]         -46%  -46%   -47% -52% -56%    -56%      -58%  -60%   -61%          -64%          -64% -77% -87%     -92%
         cps2 21.0+- 0.0/s  303%      262%  [0%]    --         -46%  -46%   -47% -52% -56%    -56%      -58%  -60%   -61%          -63%          -63% -77% -87%     -92%
 gen_no_optim 39.0+- 0.0/s  649%      574%   86%   86%           -- [-0%]    -2% -11% -18%    -18%      -23%  -25%   -27%          -32%          -32% -56% -75%     -85%
        g_exn 39.0+- 0.1/s  650%      575%   87%   86%         [0%]    --    -2% -11% -17%    -18%      -22%  -25%   -27%          -32%          -32% -56% -75%     -85%
       batseq 39.8+- 0.0/s  665%      588%   90%   90%           2%    2%     -- -10% -16%    -17%      -21%  -24%   -26%          -31%          -31% -55% -74%     -84%
          gen 44.0+- 0.0/s  745%      661%  110%  110%          13%   13%    11%   --  -7%     -8%      -13%  -16%   -18%          -23%          -23% -51% -72%     -83%
         oseq 47.3+- 0.3/s  809%      718%  126%  126%          21%   21%    19%   8%   --   [-1%]       -6%  -10%   -12%          -17%          -18% -47% -70%     -81%
      std_seq 47.7+- 0.1/s  816%      724%  128%  127%          22%   22%    20%   8% [1%]      --       -5%   -9%   -11%          -17%          -17% -47% -69%     -81%
    coroutine 50.3+- 0.1/s  867%      770%  141%  140%          29%   29%    27%  14%   6%      6%        --   -4%    -6%          -12%          -12% -44% -68%     -80%
        ulist 52.3+- 0.0/s  905%      804%  150%  150%          34%   34%    31%  19%  11%     10%        4%    --    -2%           -9%           -9% -41% -66%     -79%
       uncons 53.5+- 0.1/s  928%      825%  156%  155%          37%   37%    34%  22%  13%     12%        6%    2%     --           -7%           -7% -40% -66%     -79%
core.sequence 57.3+- 0.0/s 1002%      891%  174%  173%          47%   47%    44%  30%  21%     20%       14%   10%     7%            --         [-0%] -36% -63%     -77%
base.sequence 57.4+- 0.0/s 1003%      893%  174%  174%          47%   47%    44%  31%  21%     20%       14%   10%     7%          [0%]            -- -36% -63%     -77%
            g 89.3+- 0.1/s 1617%     1445%  327%  326%         129%  129%   125% 103%  89%     87%       78%   71%    67%           56%           56%   -- -43%     -65%
         fold  156+-   0/s 2890%     2590%  644%  642%         299%  299%   291% 254% 229%    226%      209%  197%   191%          171%          171%  74%   --     -39%
     sequence  254+-   1/s 4773%     4284% 1112% 1110%         551%  550%   537% 476% 436%    432%      404%  385%   374%          342%          342% 184%  63%       --
